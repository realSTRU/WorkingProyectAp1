@page "/R_Prestamos"
@page "/R_Prestamos/{PrestamoID:int}"


@inject PersonaBLL personas
@inject PrestamoBLL prestamos





<PageTitle>Registro Prestamos.</PageTitle>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    

    <style>
            
        body{
            background-image: url('https://wallpaper.dog/large/5451779.jpg');
            background-attachment: fixed;
            background-size: cover;
            font-family: monospace;
            margin: 0;
            padding: 0;
        }

    </style>
</head>



<body>

    <EditForm model="Prestamo">
        <DataAnnotationsValidator/>

            <div class="container">
                <div class="card text-dark bg-light mb-3 shadow-lg">
                    <div class="card-header">
                        <h4>Registro Prestamo.</h4>
                    </div>
                    

                    <div class="card-body">
                        
                        <div class="form-group">

                            <div style="display: flex; justify-content: space-between;">

                                <div class="col-5 mb-3">
                                    <label for="IDPrestamo">Prestamo Id:</label>
                                    <div class="input-group">
                                        <input @bind-value="prestamo.PrestamoID" type="text" class="form-control" id="IDPrestamo">
                                        <button class="btn btn-outline-primary" type="button" @onclick="Buscar"><b><Buscar class="oi oi-magnifying-glass"/> Buscar</b></button>
                                    </div>
                                </div>
                            

                            </div>
                            

                           

                            
                            <div class="mb-3">
                                <label for="Persona"><b>Nombre solicitante:</b></label>
                                <div class="input-group mb-6">
                                    <select @bind="prestamo.PersonaID" type="text" id="Persona" class="form-control">
                                        @foreach(var item in L_Persona)
                                        {
                                            <option value=@item.PersonaID>Id:@item.PersonaID/Nombre:@item.Nombre</option>
                                        }
                                    </select>

                                </div>

                            </div>


                            <div class="mb-3">
                                <label for="Concepto"><b>Concepto:</b></label>
                                <div class="input-group mb-6">
                                    <input @bind-value="prestamo.Concepto" type="text" id="Concepto" class="form-control"/>
                                </div>

                            </div>

                            <div class="mb-3">
                                <label for="Monto"><b>Monto:</b></label>
                                <div class="input-group mb-6">
                                    <input @bind-value="prestamo.Monto" type="text" id="Monto" class="form-control"/>
                                </div>

                            </div>

                            <div class="mb-3">
                                <label for="Fprestamo"><b>Fecha prestamo:</b></label>
                                <div class="input-group mb-6">
                                    <input disabled="true" @bind-value="prestamo.Fecha"  type="date"  class="form-control" aria-label="Recipient's username"
                                    aria-describedby="basic-addon2" id="FPrestamo"/>
                                </div>

                            </div>

                            <div class="mb-3">
                                <label for="FprestamoV"><b>Fecha vencimiento:</b></label>
                                <div class="input-group mb-6">
                                    <input type="date"  @bind-value="prestamo.Vence" class="form-control" aria-label="Recipient's username"
                                    aria-describedby="basic-addon2" id="FPrestamoV"/>
                                </div>

                            </div>


                            

                            

                        </div>

                    </div>
                    <div class="card-footer d-flex justify-content-center">
                        <div class="row">
                            <div class="btn-group">
                                <button class="btn btn-dark" type="button" @onclick="Guardar"><i class="oi oi-document"/><b> Guardar</b></button>
                                <button class="btn btn-secondary" type="button" @onclick="Nuevo"><i class="oi oi-file"/><b> Nuevo</b></button>
                                <button class="btn btn-dark" type="button"><i class="oi oi-trash" @onclick ="Eliminar"/><b> Eliminar</b></button>
                            </div>
                        </div>
                    </div>

                </div>

            </div>

            




    </EditForm>



</body>




@code
{
    [Parameter]

    public int PrestamoID {get; set;}

    public Persona persona {get; set;} = new Persona();

    public Prestamo prestamo {get; set;} = new Prestamo();

    public List<Persona> L_Persona {get; set;} = new List<Persona>();
    protected override void OnInitialized()
    {
        L_Persona = personas.GetList();
        if(PrestamoID > 0)
        {
            this.prestamo.PrestamoID = PrestamoID;
            this.Buscar();
        }


        
    }


    private void Buscar()
    {
        var prestamoEncontrado  = prestamos.Buscar(prestamo.PrestamoID);

        if(prestamoEncontrado != null)
        {
            Console.WriteLine($"Se encontro la ocupacion con el ID{this.prestamo.PrestamoID}");
            this.prestamo = prestamoEncontrado;
        }
        else
        {
            Nuevo();
            Console.WriteLine("Ocupacion no encontrada");
        }
    }

    public void Nuevo()
    {
        this.prestamo= new Prestamo();
    }

    public bool Validar(){
        return personas.Existe(prestamo.PersonaID) && this.prestamo.Concepto != null && this.prestamo.Monto > 0 && prestamo.Vence != null;
    }

    public void Guardar(){

        if(Validar())
        {
            prestamos.Guardar(this.prestamo);
            Console.WriteLine($"Se guardo en el {this.prestamo.PersonaID}");
            Nuevo();
        }
        else
        {
            Console.WriteLine("Campos no validos o no completados");
        }
    }

    public void Eliminar()
    {
        if(Validar())
        {
            bool RES = prestamos.Eliminar(this.prestamo);

            if(RES == false)
            {
                Console.WriteLine("Eliminado Correctamente");
                Nuevo();
            }
            else
            {
                Console.WriteLine("Errores al guardar la ocupacion");
            }
        }
        else
        {
            Console.WriteLine("Id No valido");
        }
    }



}